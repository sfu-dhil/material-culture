<?php

declare(strict_types=1);

/*
 * (c) 2020 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\DataFixtures;

use App\Entity\Reference;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Persistence\ObjectManager;

/**
 * Generated by Webonaute\DoctrineFixtureGenerator.
 */
class ReferenceFixtures extends Fixture implements DependentFixtureInterface {
    /**
     * {@inheritdoc}
     */
    public function load(ObjectManager $manager) : void {
        $item1 = new Reference();
        $item1->setArtefact($this->getReference('_reference_Bottle3'));
        $item1->setPublication($this->getReference('_reference_Publication1'));
        $item1->setDescription('<p>The artefact is described on page 5.</p>');
        $this->addReference('_reference_Reference1', $item1);
        $manager->persist($item1);

        $item2 = new Reference();
        $item2->setArtefact($this->getReference('_reference_Can2'));
        $item2->setPublication($this->getReference('_reference_Publication2'));
        $item2->setDescription('<p>The artefact is described on page 4.</p>');
        $this->addReference('_reference_Reference2', $item2);
        $manager->persist($item2);

        $manager->flush();
    }

    /**
     * This method must return an array of fixtures classes
     * on which the implementing class depends on.
     *
     * @return array
     */
    public function getDependencies() {
        return [
            BottleFixtures::class,
            CanFixtures::class,
            PublicationFixtures::class,
        ];
    }
}
